generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Departamento {
  id         Int        @id @default(autoincrement())
  nombre     String
  profesores Profesor[]
}

model Profesor {
  id                Int          @id @default(autoincrement())
  nombre            String
  fechaContratacion DateTime
  departamentoId    Int
  cursos            Curso[]
  departamento      Departamento @relation(fields: [departamentoId], references: [id])

  @@index([departamentoId], map: "Profesor_departamentoId_fkey")
}

model Curso {
  id           Int          @id @default(autoincrement())
  nombre       String
  descripcion  String?
  profesorId   Int
  profesor     Profesor     @relation(fields: [profesorId], references: [id])
  evaluaciones Evaluacion[]
  estudiantes  Matricula[]

  @@index([profesorId], map: "Curso_profesorId_fkey")
}

model Estudiante {
  id              Int          @id @default(autoincrement())
  nombre          String
  fechaNacimiento DateTime
  evaluaciones    Evaluacion[]
  Matricula       Matricula[]
}

model Matricula {
  id           Int        @id @default(autoincrement())
  estudianteId Int
  cursoId      Int
  fecha        DateTime
  calificacion Float?
  curso        Curso      @relation(fields: [cursoId], references: [id])
  estudiante   Estudiante @relation(fields: [estudianteId], references: [id])

  @@index([cursoId], map: "Matricula_cursoId_fkey")
  @@index([estudianteId], map: "Matricula_estudianteId_fkey")
}

model Evaluacion {
  id           Int        @id @default(autoincrement())
  fecha        DateTime
  cursoId      Int
  estudianteId Int
  nota         Int
  curso        Curso      @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  estudiante   Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)

  @@index([cursoId], map: "Evaluacion_cursoId_fkey")
  @@index([estudianteId], map: "Evaluacion_estudianteId_fkey")
}
